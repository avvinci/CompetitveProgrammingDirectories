// avvinci -  summers 18    
// #include"prettyprint.hpp"
#include<bits/stdc++.h>
using namespace std;

typedef pair<long long,long long > P;

#define mod 1000000007 
#define pb emplace_back
#define fs first
#define sc second
#define ll long long 
#define fr(it,st,en) for(it=st;it<en;it++)
#define all(container) container.begin(),container.end()
#define INP ios_base::sync_with_stdio(false);cin.tie(NULL);
#define ws(x) cout << #x << " = " << x << endl;
#define N 2004

const long long infl = 1e18+5;

ll n,m,k,f,val,t,i,j;
ll ind,cnt,sz,sm,ans,mx,mn;
char a[N][N] ;
int deg[N][N] ; 
int x[]  = {1,-1,0,0} ; 
int y[] = {0,0,-1,1} ; 


int main(){
INP
if (fopen("inp.txt", "r")) {
    freopen("myfile.txt","w",stdout);
    freopen("inp.txt", "r", stdin);
}

cin>>n>>m;
fr(i,0,N){
	fr(j,0,N){
		a[i][j] = '*' ; 
	}
}
fr(i,1,n+1){
	fr(j,1,m+1){
		cin>>a[i][j] ; 
	}
}

queue< P > q ; 
fr(i,1,n+1){
	fr(j,1,m+1){
		if(a[i][j] == '*') continue ; 
		fr(k,0,4){
			if(a[i+x[k]][j+y[k]] == '.') deg[i][j]++ ; 
		}
		if(deg[i][j] == 1) {
			q.push({i,j}) ; 
		}
	}
}

while(!q.empty()){
	P p = q.front() ; 
	q.pop() ; 
	// ws(p);

	i= p.fs ; j = p.sc ;
	if(deg[p.fs][p.sc] < 1 )  continue;
	// cout<<p.fs<<" "<<p.sc <<"\n";

	
	fr(k,0,4) {
		if(a[i+x[k]][j+y[k]] == '.'){
			deg[i+x[k]][j+y[k]] = 0 ; 
			fr(cnt,0,4){
				 deg[i+x[k]+x[cnt]][j+y[k]+y[cnt]]--; 
				 if(deg[i+x[k]+x[cnt]][j+y[k]+y[cnt]]== 1 ) q.push({i+x[k]+x[cnt] , j + y[k]+ y[cnt]}) ; 
			}
			
			// ws(k);
			if(k == 0){
				a[i][j] = '^' ; 
				a[i+x[k]][j+y[k]] = 'v' ; 
			}
			else if(k == 1){
				a[i][j] = 'v' ; 
				a[i+x[k]][j+y[k]] = '^' ; 
			}
			else if(k == 2){
				a[i][j] = '>' ; 
				a[i+x[k]][j+y[k]] = '<' ; 
			}
			else{
				a[i][j] = '<' ; 
				a[i+x[k]][j+y[k]] = '>' ; 
			}
		}
	}
	deg[p.fs][p.sc] = 0 ; 
}

fr(i,1,n+1){
	fr(j,1,m+1){
		if(a[i][j]  == '.') {
			cout<<"Not unique\n";
			return 0 ; 
		} 
	}
}

fr(i,1,n+1){
	fr(j,1,m+1){
		cout<<a[i][j] ; 
	}
	cout<<"\n"; 
}
return 0 ;
}
